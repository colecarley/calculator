
funk fib(n) {
    if n == 0 {
        1
    } else {
        if n == 1 {
            1
        } else {
            fib(n - 1) + fib(n - 2)
        }
    }
}

println(fib(5))

funk double(x) {
    x * 2
}

println(double(15))

funk gcd(x, y) {
    if x == 0 {
        y
    } else {
        gcd(y % x, x)
    }
}

println(gcd(52, 4))

funk factorial_helper(i, x) {
    if i == 1 {
        x
    } else {
        factorial_helper(i - 1, x * i)
    }
}

funk factorial(x) {
    factorial_helper(x - 1, x)
}

println(factorial(12))

funk sum_helper(x, acc) {
    if x == 0 {
        acc
    } else {
        sum_helper(x - 1, acc + x)
    }
}

funk sum(x) {
    sum_helper(x, 0)
}

let x = 4
println(sum(x))


funk is_even(x) {
    if (x % 2) == 0 {
        1
    } else {
        0
    }
}

println(is_even(2))
println(is_even(1))

println(true)
println(false)

println("hello")

let foo = 1
println(foo)

funk return_true() {
    true
}

println(return_true())

funk return_string() {
    "this is a string"
}

println(return_string())
println("foo" + "shoe")

println("foo" == "foo")


print(true != true)

let foo = "foobar"
println(foo[0])

let foo = [1,2,3]
println(foo)

println(foo[0])

println(foo[1])


funk create_array(x, y, z) {
    [x, y, z]
}

print("creating array: ")

let shoebar = create_array(1,2,3)

println(shoebar);